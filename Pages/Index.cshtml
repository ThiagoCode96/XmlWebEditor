@page
@using Newtonsoft.Json;
@using System.Xml;
@model IndexModel


@{
    ViewData["Title"] = "Xml/JsonEditor";
    string document ="";
    XmlDocument docx = new XmlDocument();//docx para o jstree
    try
    {
        if (Model.text1.StartsWith("<"))
        {
            document = "xml";
            if (Model.text2 == null)
                docx.LoadXml(Model.text1);
            else
                docx.LoadXml(Model.text2);
        }
        else if (Model.text1.StartsWith("{") || Model.text1.StartsWith("["))
        {

            document = "json";

        }
        ;
    }
    catch
    {
        document = "error";
    }

    
    
        
}


<div id="text-center">
    <h1 class="display-4">Xml Editor</h1>
</div>
<div id="xml-center">
    @if (Model.IsResponse)
    {
        if (Model.IsSuccess)
        {
            <div class="alert alert-success">
                @Model.message
            </div>
        }
        else
        {
            <div class="alert alert-danger">
                @Model.message
            </div>
        }
    }

    <div id="xml-button-top">
        <form asp-page-handler="xmlTextStart" method="post" enctype="multipart/form-data">
            <button class="btn btn-default"> novo XML </button>
        </form>
        <form asp-page-handler="jsonTextStart" method="post" enctype="multipart/form-data">
            <button class="btn btn-default"> novo Json </button>
        </form>
        @*
            verifica se é XmL ou Json antes de salvar para não ocorrer problemas
        *@
        @if (document=="xml")
        {
            <form asp-page-handler="xmlFile" method="post">
                <button class="btn btn-default" type="submit" onclick="return savetext1()" >salvar </button>
                <input type="hidden" name="text" class="xmlFile" runnat="server" />
            </form>
            

            <form asp-page-handler="xmlMinimize" method="post">
                <button class="btn btn-default" type="submit" onclick="return savetext1()">minimizar</button>
                <input type="hidden" name="text" class="xmlFile" runnat="server" />
            </form>
            <form asp-page-handler="xmlIdent" method="post">
                <button class="btn btn-default" type="submit" onclick="return savetext1()">identar</button>
                <input type="hidden" name="text" class="xmlFile" runnat="server" />
            </form>
            <form asp-page-handler="xmlToJson" method="post">
                <button class="btn btn-default" type="submit" onclick="return savetext1()">transformar em Json</button>
                <input type="hidden" name="text" class="xmlFile" runnat="server" />
            </form>
            
        }
        else if (document=="json")
        {
            <form asp-page-handler="jsonFile" method="post">
                <button class="btn btn-default" type="submit" onclick="return savetext1()">salvar </button>
                <input type="hidden" name="text" class="xmlFile" runnat="server" />
            </form>
            <form asp-page-handler="jsonMinimize" method="post">
                <button class="btn btn-default" type="submit" onclick="return savetext1()">minimizar</button>
                <input type="hidden" name="text" class="xmlFile" runnat="server" />
            </form>
            <form asp-page-handler="jsonIdent" method="post">
                <button class="btn btn-default" type="submit" onclick="return savetext1()">identar</button>
                <input type="hidden" name="text" class="xmlFile" runnat="server" />
            </form>
            <form asp-page-handler="jsonToXml" method="post">
                <button class="btn btn-default" type="submit" onclick="return savetext1()">transformar em Xml</button>
                <input type="hidden" name="text"  class="xmlFile" runnat="server" />
            </form>
            
        }
        @*script para salvar o text1*@
        <script>
            function savetext1() {
                var texto = document.getElementsByClassName("xmlFile");
                var y=texto.length; 
                for(let i=0; i < y;i++){
                    texto[i].value = document.getElementById("codeEditor").value
                }
                
                //document.getElementsByClassName("xmlFile").value =texto;
            }
        </script>
    </div>
    <div id="xml-archives">
        @*set file*@
        <form asp-page-handler="SetFile" method="post" enctype="multipart/form-data">
            <input type="file" class="form-control" id="fileInput" asp-for="Upload" />

            <button class="btn btn-default" type="submit"  onclick="return checkFileInput()"> abrir </button>
        </form>
        @*set URL*@
        <form asp-page-handler="fileFromStream" method="post" enctype="multipart/form-data">
            <h2>for URL:</h2>
            <input typeof="text" name="link" class="form-control" id="urlInput" />

            <button class="btn btn-default" type="submit" onclick="return checkFileInput()"> abrir </button>
        </form>
       
        @*
            script para o usuário não enviar arquivos nulos
        *@
        <script>
            function checkFileInput() {
                let fileInput = document.getElementById("fileInput");
                let urlInput = document.getElementById("urlInput");
                if (!fileInput.value && !urlInput.value) {
                    alert("Por favor adicione um arquivo Xml ou Json");
                    return false;
                }
                return true;
            }
        </script>
        <p style="margin:auto;">Atenção: para inserção de 2 ou mais elementos num mesmo objeto (como "objeto":["1","2"]) por favor colocar os objetos numerados como no exemplo do novo JSON</p>
    </div>
    <div id="xml-textarea">
        <div >
            <form asp-page-handler="textController" method="post">
                <div>
                    
                    <p>text</p>
                    <button  type="submit">atualizar</button>
                </div>
                @*fim demonstrando line number*@
                <div class="editor">
                    <textarea id='lineCounter' wrap='off' readonly>1.</textarea>
                    <textarea class="xml-text"  typeof="text" name="text" cols="90" id="codeEditor">@Model.text1</textarea>
                </div>
                @*
                    criação de script para as linhas
                *@
            </form>
        </div>
        @* Json do class editor *@
        <script>
            var codeEditor = document.getElementById('codeEditor');
            var lineCounter = document.getElementById('lineCounter');
            codeEditor.addEventListener('scroll', () => {
                lineCounter.scrollTop = codeEditor.scrollTop;
                lineCounter.scrollLeft = codeEditor.scrollLeft;
            });
            codeEditor.addEventListener('keydown', (e) => {
                let { keyCode } = e;
                let { value, selectionStart, selectionEnd } = codeEditor;
                if (keyCode === 9) {  // TAB = 9
                    e.preventDefault();
                    codeEditor.value = value.slice(0, selectionStart) + '\t' + value.slice(selectionEnd);
                    codeEditor.setSelectionRange(selectionStart + 2, selectionStart + 2)
                }
            });
            var lineCountCache = 0;
            function line_counter() {
                var lineCount = codeEditor.value.split('\n').length;
                var outarr = new Array();
                if (lineCountCache != lineCount) {
                    for (var x = 0; x < lineCount; x++) {
                        outarr[x] = (x + 1) + '.';
                    }
                    lineCounter.value = outarr.join('\n');
                }
                lineCountCache = lineCount;
            }
            codeEditor.addEventListener('input', () => {
                line_counter();
            });
            $(document).ready(line_counter());
        </script>
        @*fim do script para o form*@
        @* início Style do class editor*@
        <style>
            #codeEditor, #lineCounter {
                font-family: lucida console, courier new, courier, monospace;
                margin: 0;
                padding: 10px 0;
                height: 75vh;
                border-radius: 0;
                resize: none;
                font-size: 16px;
                line-height: 1.2;
                outline: none;
                -moz-box-sizing: border-box;
                -webkit-box-sizing: border-box;
                box-sizing: border-box;
            }

            #lineCounter:focus-visible,
            #codeEditor:focus-visible {
                outline: none;
            }

        #lineCounter {
            display: flex;
            border-color: transparent;
            overflow-y: hidden;
            text-align: right;
            box-shadow: none;
            color: #707070;
            background-color: #d8d8d8;
            position: absolute;
            width: 3.5rem;
            /* Determine appearance of line counter */
            background-color: #3E3D32;
            border-color: #3E3D32;
            color: #928869;
        }

            #codeEditor {
                padding-left: calc(3.5rem + 5px);
                width: 99%;
                /* Determine appearance of code editor */
                background-color: #272822;
                border-color: #272822;
                color: #ffffff;
            }
        </style>
        @*fim class editor *@
       <div>
            @*"*@
            <form asp-page-handler="jstreeToData" method="post">
                <div>
                    <p>nodes: </p>
                    
                    <button type="submit" onclick="return updateJson()" >atualizar</button>
                    @*
                    script para o usuário ver o arquivo json
                    *@
                    <script>
                        function updateJson() {
                            var tree = $('#nodos').jstree(true).get_json('#', { flat: false });
                            // Convert the result to a JSON string
                            document.getElementById("jstreeData").value=JSON.stringify(tree);
                            
                        }
                    </script>
                    <input id="jstreeData" name="jstreeData" type="hidden"  runat="server" />
                    @if(document=="xml"){
                        <input type="hidden" name="document" value="xml" runat="server" />
                    }
                </div>
                @*
                    textarea antigo
                <textarea class="xml-text" name="xml2" rows="12" cols="80" readonly>@Model.text2</textarea>
                *@            
            </form>
            <div id="nodos"></div>
       </div>
    </div>
    <div id="jsTree">
        @*LIMPEZA DOS ÍCONES*@
        <style type="text/css">
            .jstree li > a > .jstree-icon {
                display: none !important;
            }
        </style>
        @*FIM LIMPEZA DOS ÍCONES*@
        <script>
            $(document).ready(function () 
            {
                var treedoc;
                if ("@document" == "json") {
                    treedoc= JSON.parse(@Html.Raw(Json.Serialize(Model.text1))) 
                }
                else if ("@document" == "xml")
                    treedoc= JSON.parse(@Html.Raw(Json.Serialize(JsonConvert.SerializeXmlNode(docx))))
                

                $('#nodos').jstree 
                    ({
                   
                        "core": {
                            "animation": 0,
                            "check_callback": true,
                            "themes": {
                                "variant": "large", "stripes": true
                            },
                            'check_callback':true,
                            data: jsonToJsTreeObject(treedoc)
                        },
                       
                        "plugins": [
                            "contextmenu", "dnd", "search",
                            "state",  "wholerow"    
                        ]
                    
                    })


            }
            );
            //JSTREE PARA JS
            //Função criada por mustafakadwa52 na URL: https://github.com/vakata/jstree/issues/2405
            //SIM! FUNCIONOU!
            function jsonToJsTreeObject(json_data_object, final_array = new Array()) {
                Object.keys(json_data_object).forEach(function (data) {
                    // console.log("Key:" + data);
                    if (Array.isArray(json_data_object[data]) || json_data_object[data] instanceof Object) {
                        final_array.push({ text: `${data}`, children: jsonToJsTreeObject(json_data_object[data], new Array()) });
                        // using state attribute
                        // final_array.push( { text: `${data}`, state : {  'opened' : false, 'selected' : false }, children: jsonToJsTreeObject( json_data_object[data], new Array() ) } );
                    }
                    else {
                        final_array.push({ text: `${data}`, children: [{ text: `${json_data_object[data]}` }] });
                        // using state attribute
                        // final_array.push( { text: `${data}`, state : {  'opened' : false, 'selected' : false }, children: [{ text: `${json_data_object[data]}` }] } );
                    }
                });

                return final_array;
            }
            //EXCHANGE THE PLUGIN:
            
        </script>
    </div>
</div>