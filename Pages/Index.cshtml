@page
@model IndexModel


@{
    ViewData["Title"] = "Xml/JsonEditor";
    string document ="";
    if (Model.text1.StartsWith("<"))
        document = "xml";
    else if (Model.text1.StartsWith("{") || Model.text1.StartsWith("["))
        document = "json";
    

    
        
}


<div id="text-center">
    <h1 class="display-4">Xml Editor</h1>
</div>
<div id="xml-center">
    @if (Model.IsResponse)
    {
        if (Model.IsSuccess)
        {
            <div class="alert alert-success">
                @Model.message
            </div>
        }
        else
        {
            <div class="alert alert-danger">
                @Model.message
            </div>
        }
    }
    <div id="xml-button-top">
        <form asp-page-handler="xmlTextStart" method="post" enctype="multipart/form-data">
            <button class="btn btn-default"> novo XML </button>
        </form>
        <form asp-page-handler="jsonTextStart" method="post" enctype="multipart/form-data">
            <button class="btn btn-default"> novo Json </button>
        </form>
        @if (document=="xml")
        {

            <a class="btn btn-default" asp-page-handler="xmlFile">salvar </a>
        }
        else if (document=="json")
        {
           <a class="btn btn-default" asp-page-handler="jsonFile"> salvar </a>
            
        }

    </div>
    <div id="xml-archives">
        <form asp-page-handler="xmlSetFile" method="post" enctype="multipart/form-data">
            <input type="file" class="form-control" id="fileInput" asp-for="Upload" />

            <button class="btn btn-default" type="submit"  onclick="return checkFileInput()"> abrir </button>
        </form>
        @*
            script para o usuário não enviar arquivos nulos
        *@
        <script>
            function checkFileInput() {
                let fileInput = document.getElementById("fileInput");
                if (!fileInput.value) {
                    alert("Por favor adicione um arquivo Xml ou Json");
                    return false;
                }
                return true;
            }
        </script>
    </div>
    <div id="xml-textarea">
        <div>
            <form asp-page-handler="textController" method="post">
                <div>
                    
                    <p>text</p>
                    <button  type="submit">atualizar</button>
                </div>
                @*fim demonstrando line number*@
                 <textarea class="xml-text"  typeof="text" name="text" rows="12" cols="80">@Model.text1</textarea>
                
            </form>
        </div>
       <div>
            <form>
                <div>
                    <p>nodes</p>
                    @*
                        teóricamente, aqui era para ter nodos também, por isto o forms e o atualizar.
                        Porém como eu não consegui fazer por enquanto estará aí como um "TODO"
                    *@
                    
                    <button type="submit">atualizar</button>
                </div>
                <textarea class="xml-text" name="xml2" rows="12" cols="80" readonly>@Model.text2</textarea>
            </form>
       </div>
    </div>
</div>